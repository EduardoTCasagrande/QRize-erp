<!DOCTYPE html>
<html lang="pt-BR" class="scroll-smooth">
<head>
  <meta charset="UTF-8" />
  <title>Vendas - Controle de Estoque</title>
  <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="vendas-page bg-gray-50 text-gray-800 min-h-screen flex flex-col">

  <%- include('partials/header') %>

  <main class="flex-grow container mx-auto px-4 py-6">
    <h1 class="text-3xl font-bold mb-6">Nova Venda</h1>

    <div class="mb-6 flex items-center gap-3">
      <label for="quiosqueSelect" class="font-semibold">Quiosque:</label>
      <select id="quiosqueSelect" disabled class="border border-gray-300 rounded px-3 py-1 bg-gray-100 cursor-not-allowed">
        <option value="">Carregando...</option>
      </select>
    </div>

    <div class="flex flex-col md:flex-row gap-6">
      <!-- Box 1: SKU -->
      <section class="flex-1 bg-white rounded-lg shadow p-6">
        <label for="inputSKU" class="block font-semibold mb-2">SKU:</label>
        <input 
          type="text" 
          id="inputSKU" 
          placeholder="Bipe ou digite SKU" 
          autofocus 
          class="w-full border border-gray-300 rounded px-3 py-2 mb-3 focus:outline-none focus:ring-2 focus:ring-blue-400"
        />
        <div id="mensagem" class="mb-3 min-h-[1.5rem] font-semibold"></div>
        <ul id="listaVendas" class="max-h-72 overflow-y-auto divide-y divide-gray-200">
          <!-- itens da venda aqui -->
        </ul>
      </section>

      <!-- Box 2: Pagamento -->
      <section class="flex-1 bg-white rounded-lg shadow p-6 flex flex-col">
        <h3 class="text-xl font-semibold mb-4">Formas de Pagamento</h3>

        <div id="pagamentos" class="flex flex-col gap-3 mb-4">

        </div>

        <div class="flex flex-wrap items-center gap-4 mb-4">
          <button 
            type="button" 
            id="adicionarPagamento" 
            class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded"
          >
            + Forma de Pagamento
          </button>

          <label for="desconto" class="font-semibold">Desconto (R$):</label>
          <input 
            type="number" 
            id="desconto" 
            placeholder="Ex: 10.00" 
            step="0.01" 
            min="0" 
            class="border border-gray-300 rounded px-3 py-2 w-32"
          />
        </div>

        <input 
          type="text" 
          id="operador" 
          placeholder="Nome do vendedor" 
          class="border border-gray-300 rounded px-3 py-2 mb-4 focus:outline-none focus:ring-2 focus:ring-blue-400"
        />

        <button 
          id="finalizarVenda" 
          class="bg-green-600 hover:bg-green-700 text-white py-3 rounded font-semibold text-lg"
        >
          Finalizar Venda
        </button>

        <h2 id="totalVenda" class="mt-6 text-2xl font-bold">Total: R$ 0,00</h2>
      </section>
    </div>
  </main>

  <%- include('partials/footer') %>
  
  <script>
    const inputSKU = document.getElementById("inputSKU");
    const quiosqueSelect = document.getElementById("quiosqueSelect");
    const mensagem = document.getElementById("mensagem");
    const listaVendas = document.getElementById("listaVendas");
    const finalizarVenda = document.getElementById("finalizarVenda");
    const totalVenda = document.getElementById("totalVenda");
    const descontoInput = document.getElementById("desconto");
    const pagamentosDiv = document.getElementById('pagamentos');
    const adicionarPagamentoBtn = document.getElementById('adicionarPagamento');

    let vendaAtual = {};
    let precos = {};
    let total = 0;
    let itensPromocionais = {};

    async function carregarQuiosqueUsuario() {
      const res = await fetch('/meu-quiosque');
      const data = await res.json();
      quiosqueSelect.innerHTML = '';
      const opt = document.createElement('option');
      opt.value = data.quiosque;
      opt.textContent = data.quiosque;
      quiosqueSelect.appendChild(opt);
      quiosqueSelect.disabled = true;
    }

    async function carregarPrecos() {
      const res = await fetch('/api/precos');
      const lista = await res.json();
      precos = {};
      lista.forEach(({ sku, preco, foto }) => {
        precos[sku.toLowerCase()] = { preco, foto };
      });
    }

    function formatarReal(valor) {
      return valor.toLocaleString('pt-BR', { style: 'currency', currency: 'BRL' });
    }

    function marcarPromocional(sku) {
      if (itensPromocionais[sku]) {
        delete itensPromocionais[sku];
      } else {
        itensPromocionais[sku] = true;
      }
      atualizarListaVendas();
    }

    function removerSKU(sku) {
      if (vendaAtual[sku]) {
        vendaAtual[sku]--;
        if (vendaAtual[sku] <= 0) {
          delete vendaAtual[sku];
          delete itensPromocionais[sku];
        }
        atualizarListaVendas();
      }
    }

    function atualizarListaVendas() {
      listaVendas.innerHTML = "";
      let subtotalGeral = 0;

      Object.entries(vendaAtual).forEach(([sku, qtd]) => {
        const info = precos[sku] || { preco: 0, foto: '' };
        let precoUnit = info.preco;

        if (itensPromocionais[sku]) {
          precoUnit = 0.01;
        }

        const subtotal = precoUnit * qtd;
        subtotalGeral += subtotal;

        const li = document.createElement("li");
        li.className = "flex items-center gap-4 py-2";

        li.innerHTML = `
          <button
            class="text-red-600 hover:text-red-800 text-lg"
            aria-label="Remover ${sku}"
            onclick="removerSKU('${sku}')"
          >
            ❌
          </button>
          <img
            src="${info.foto || '/imagens/skus/sem-foto.jpg'}"
            alt="${sku}"
            class="w-16 h-16 object-contain rounded"
          />
          <div class="flex-1 flex flex-col justify-center">
            <span class="font-semibold text-gray-900">${sku}</span>
            <span class="text-gray-600">Qtd: ${qtd}</span>
            <span class="text-gray-800 font-medium">Total: ${formatarReal(precoUnit * qtd)}</span>
          </div>
          <button
            class="text-green-600 hover:text-green-800 text-xl"
            aria-label="Marcar promocional ${sku}"
            onclick="marcarPromocional('${sku}')"
          >
            ${itensPromocionais[sku] ? '✅' : '⚪'}
          </button>
        `;

        listaVendas.appendChild(li);
      });

      const desconto = parseFloat(descontoInput.value) || 0;
      total = subtotalGeral - desconto;
      if (total < 0) total = 0;

      totalVenda.textContent = `Total: ${formatarReal(total)}`;
      ajustarValorDinheiro();
    }

    inputSKU.addEventListener("keypress", (e) => {
      if (e.key === "Enter") {
        const sku = inputSKU.value.trim().toLowerCase();
        const quiosque = quiosqueSelect.value;
        inputSKU.value = "";

        if (!precos[sku]) {
          mensagem.textContent = `SKU '${sku}' não encontrado.`;
          mensagem.className = "erro";
          return;
        }

        vendaAtual[sku] = (vendaAtual[sku] || 0) + 1;
        mensagem.textContent = `SKU '${sku}' registrado.`;
        mensagem.className = "ok";
        atualizarListaVendas();
      }
    });

    descontoInput.addEventListener("input", atualizarListaVendas);

    adicionarPagamentoBtn.addEventListener('click', () => {
      const div = document.createElement('div');
      div.className = 'pagamento flex gap-2 items-center';
      div.innerHTML = `
        <select class="forma border border-gray-300 rounded px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-400">
          <option value="dinheiro">Dinheiro</option>
          <option value="pix">Pix</option>
          <option value="cartao">Cartão</option>
        </select>
        <input type="number" class="valor border border-gray-300 rounded px-3 py-2 w-full" placeholder="Valor (R$)" min="0" step="0.01" />
        <button type="button" class="remover bg-red-600 hover:bg-red-700 text-white px-3 py-1 rounded">Remover</button>
      `;
      div.querySelector('.remover').addEventListener('click', () => div.remove());
      pagamentosDiv.appendChild(div);
      div.querySelector('.valor').addEventListener('input', ajustarValorDinheiro);
      div.querySelector('.forma').addEventListener('change', ajustarValorDinheiro);
    });

    function coletarPagamentos() {
      const pagamentos = [];
      pagamentosDiv.querySelectorAll('.pagamento').forEach(div => {
        const forma = div.querySelector('.forma').value;
        const valor = parseFloat(div.querySelector('.valor').value) || 0;
        if (valor > 0) pagamentos.push({ forma, valor });
      });
      return pagamentos;
    }

    function ajustarValorDinheiro() {
      const pagamentos = pagamentosDiv.querySelectorAll('.pagamento');
      let somaOutros = 0;
      let dinheiroInput = null;

      pagamentos.forEach(div => {
        const forma = div.querySelector('.forma').value;
        const valorInput = div.querySelector('.valor');
        const valor = parseFloat(valorInput.value) || 0;

        if (forma === 'dinheiro') {
          dinheiroInput = valorInput;
        } else {
          somaOutros += valor;
        }
      });

      if (dinheiroInput) {
        const valorDinheiro = total - somaOutros;
        dinheiroInput.value = valorDinheiro > 0 ? valorDinheiro.toFixed(2) : '0.00';
      }
    }

    finalizarVenda.addEventListener("click", async () => {
      const quiosque = quiosqueSelect.value;
      const desconto = parseFloat(descontoInput.value) || 0;
      const pagamentos = coletarPagamentos();
      const somaPagamentos = pagamentos.reduce((acc, p) => acc + p.valor, 0);
      const operador = document.getElementById("operador").value.trim();

      if (!quiosque || Object.keys(vendaAtual).length === 0) {
        mensagem.textContent = "Bipe ao menos 1 item.";
        mensagem.className = "erro";
        return;
      }

      if (pagamentos.length === 0) {
        mensagem.textContent = "Adicione ao menos uma forma de pagamento.";
        mensagem.className = "erro";
        return;
      }

      if (Math.abs(somaPagamentos - total) > 0.01) {
        mensagem.textContent = `Pagamentos (${formatarReal(somaPagamentos)}) ≠ Total (${formatarReal(total)})`;
        mensagem.className = "erro";
        return;
      }

      const res = await fetch('/vender', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ quiosque, venda: vendaAtual, pagamentos, total, desconto, operador, itensPromocionais })
      });

      const data = await res.json();
      mensagem.textContent = data.mensagem || "Venda finalizada.";
      mensagem.className = data.status === "ok" ? "ok" : "erro";

      if (data.status === "ok") {
        vendaAtual = {};
        itensPromocionais = {};
        listaVendas.innerHTML = "";
        descontoInput.value = 0;
        totalVenda.textContent = "Total: R$ 0,00";
        pagamentosDiv.innerHTML = '';
        adicionarPagamentoBtn.click();
      }

      if (data.cupomUrl) {
        window.location.href = data.cupomUrl;
      }
    });

    window.onload = async () => {
      await carregarQuiosqueUsuario();
      await carregarPrecos();
      adicionarPagamentoBtn.click(); // já inicia com 1 forma de pagamento
    };
  </script>
</body>
</html>
